{"ast":null,"code":"var _jsxFileName = \"/Users/estellegresillon/code/flow/src/components/Flow/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactFlow, { addEdge, Background, Controls, MiniMap, ReactFlowProvider, removeElements } from \"react-flow-renderer\";\nimport styled from \"styled-components\";\nimport { INITIAL_DATA } from \"utils/initialData\";\nimport { getAllFlowsFromLocalStorage, getDocumentFromLocalStorage, removeFlowFromLocalStorage, saveDocumentInLocalStorage, saveNewFlowInLocalStorage } from \"utils/localStorage\";\nimport Sidebar from \"./Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet id = 0;\n\nconst getId = () => `dndnode_${id++}`;\n\nconst style = {\n  border: \"none\",\n  boxShadow: \"0 1px 4px 1px rgb(0 0 0 / 8%)\"\n};\n\nconst Flow = () => {\n  _s();\n\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [newNodeName, setNewNodeName] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [selectedFlow, setSelectedFlow] = useState(\"\");\n  const [elements, setElements] = useState([]);\n\n  const onConnect = params => setElements(els => addEdge(params, els));\n\n  const onElementsRemove = elementsToRemove => setElements(els => removeElements(elementsToRemove, els));\n\n  const onLoad = _reactFlowInstance => setReactFlowInstance(_reactFlowInstance);\n\n  const onDragOver = event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n  };\n\n  const onDrop = event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData(\"application/reactflow\");\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      data: {\n        label: newNodeName\n      },\n      id: getId(),\n      position,\n      type,\n      style\n    };\n    setElements(es => es.concat(newNode));\n  };\n\n  const onClean = () => {\n    setElements([]);\n  };\n\n  const onInputChange = e => {\n    setNewNodeName(e.target.value);\n  };\n\n  const onRemoveFlow = flow => {\n    setElements([]);\n    const filteredOptions = options.filter(opt => opt !== flow);\n    setOptions(filteredOptions);\n    removeFlowFromLocalStorage(flow);\n  };\n\n  const onSelectChange = e => {\n    console.log(e);\n    setSelectedFlow(e.target.value);\n  };\n\n  useEffect(() => {\n    const flows = getAllFlowsFromLocalStorage() || [];\n\n    if (flows.length > 0) {\n      setSelectedFlow(flows[0]);\n      setElements(getDocumentFromLocalStorage(flows[0]));\n      return;\n    }\n\n    setSelectedFlow(\"default\");\n    saveNewFlowInLocalStorage(\"default\");\n    saveDocumentInLocalStorage(\"default\", INITIAL_DATA);\n    setElements(INITIAL_DATA);\n    setOptions(flows);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FlowWrapper, {\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        elements: elements,\n        newNodeName: newNodeName,\n        onClean: onClean,\n        onInputChange: onInputChange,\n        onRemoveFlow: onRemoveFlow,\n        onSelectChange: onSelectChange,\n        options: options,\n        selectedFlow: selectedFlow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactflow-wrapper\",\n        ref: reactFlowWrapper,\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          elements: elements,\n          onConnect: onConnect,\n          onElementsRemove: onElementsRemove,\n          onLoad: onLoad,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          snapToGrid: true,\n          snapGrid: [15, 15],\n          children: [/*#__PURE__*/_jsxDEV(MiniMap, {\n            nodeStrokeColor: n => {\n              var _n$style;\n\n              if ((_n$style = n.style) !== null && _n$style !== void 0 && _n$style.background) return n.style.background;\n              if (n.type === \"input\") return \"#0041d0\";\n              if (n.type === \"output\") return \"#ff0072\";\n              if (n.type === \"default\") return \"#1a192b\";\n              return \"#eee\";\n            },\n            nodeColor: n => {\n              var _n$style2;\n\n              if ((_n$style2 = n.style) !== null && _n$style2 !== void 0 && _n$style2.background) return n.style.background;\n              return \"#fff\";\n            },\n            nodeBorderRadius: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Background, {\n            color: \"#aaa\",\n            gap: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Flow, \"L4Dju/m739jO0mwtXYoTEiqxapM=\");\n\n_c = Flow;\nexport default Flow;\nconst FlowWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  height: 100vh;\n  position: relative;\n  width: 100%;\n\n  .reactflow-wrapper {\n    height: 100%;\n    width: calc(100% - 200px);\n  }\n`;\n_c2 = FlowWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Flow\");\n$RefreshReg$(_c2, \"FlowWrapper\");","map":{"version":3,"sources":["/Users/estellegresillon/code/flow/src/components/Flow/index.jsx"],"names":["React","useEffect","useRef","useState","ReactFlow","addEdge","Background","Controls","MiniMap","ReactFlowProvider","removeElements","styled","INITIAL_DATA","getAllFlowsFromLocalStorage","getDocumentFromLocalStorage","removeFlowFromLocalStorage","saveDocumentInLocalStorage","saveNewFlowInLocalStorage","Sidebar","id","getId","style","border","boxShadow","Flow","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","newNodeName","setNewNodeName","options","setOptions","selectedFlow","setSelectedFlow","elements","setElements","onConnect","params","els","onElementsRemove","elementsToRemove","onLoad","_reactFlowInstance","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","type","getData","position","project","x","clientX","left","y","clientY","top","newNode","data","label","es","concat","onClean","onInputChange","e","target","value","onRemoveFlow","flow","filteredOptions","filter","opt","onSelectChange","console","log","flows","length","n","background","FlowWrapper","div"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  Background,\n  Controls,\n  MiniMap,\n  ReactFlowProvider,\n  removeElements,\n} from \"react-flow-renderer\";\nimport styled from \"styled-components\";\n\nimport { INITIAL_DATA } from \"utils/initialData\";\nimport {\n  getAllFlowsFromLocalStorage,\n  getDocumentFromLocalStorage,\n  removeFlowFromLocalStorage,\n  saveDocumentInLocalStorage,\n  saveNewFlowInLocalStorage,\n} from \"utils/localStorage\";\n\nimport Sidebar from \"./Sidebar\";\n\nlet id = 0;\nconst getId = () => `dndnode_${id++}`;\nconst style = { border: \"none\", boxShadow: \"0 1px 4px 1px rgb(0 0 0 / 8%)\" };\n\nconst Flow = () => {\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [newNodeName, setNewNodeName] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [selectedFlow, setSelectedFlow] = useState(\"\");\n  const [elements, setElements] = useState([]);\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\n  const onElementsRemove = (elementsToRemove) =>\n    setElements((els) => removeElements(elementsToRemove, els));\n\n  const onLoad = (_reactFlowInstance) =>\n    setReactFlowInstance(_reactFlowInstance);\n\n  const onDragOver = (event) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n  };\n\n  const onDrop = (event) => {\n    event.preventDefault();\n\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData(\"application/reactflow\");\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top,\n    });\n    const newNode = {\n      data: { label: newNodeName },\n      id: getId(),\n      position,\n      type,\n      style,\n    };\n\n    setElements((es) => es.concat(newNode));\n  };\n\n  const onClean = () => {\n    setElements([]);\n  };\n\n  const onInputChange = (e) => {\n    setNewNodeName(e.target.value);\n  };\n\n  const onRemoveFlow = (flow) => {\n    setElements([]);\n    const filteredOptions = options.filter((opt) => opt !== flow);\n    setOptions(filteredOptions);\n    removeFlowFromLocalStorage(flow);\n  };\n\n  const onSelectChange = (e) => {\n    console.log(e);\n    setSelectedFlow(e.target.value);\n  };\n\n  useEffect(() => {\n    const flows = getAllFlowsFromLocalStorage() || [];\n\n    if (flows.length > 0) {\n      setSelectedFlow(flows[0]);\n      setElements(getDocumentFromLocalStorage(flows[0]));\n      return;\n    }\n\n    setSelectedFlow(\"default\");\n    saveNewFlowInLocalStorage(\"default\");\n    saveDocumentInLocalStorage(\"default\", INITIAL_DATA);\n    setElements(INITIAL_DATA);\n    setOptions(flows);\n  }, []);\n\n  return (\n    <FlowWrapper>\n      <ReactFlowProvider>\n        <Sidebar\n          elements={elements}\n          newNodeName={newNodeName}\n          onClean={onClean}\n          onInputChange={onInputChange}\n          onRemoveFlow={onRemoveFlow}\n          onSelectChange={onSelectChange}\n          options={options}\n          selectedFlow={selectedFlow}\n        />\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\n          <ReactFlow\n            elements={elements}\n            onConnect={onConnect}\n            onElementsRemove={onElementsRemove}\n            onLoad={onLoad}\n            onDrop={onDrop}\n            onDragOver={onDragOver}\n            snapToGrid={true}\n            snapGrid={[15, 15]}\n          >\n            <MiniMap\n              nodeStrokeColor={(n) => {\n                if (n.style?.background) return n.style.background;\n                if (n.type === \"input\") return \"#0041d0\";\n                if (n.type === \"output\") return \"#ff0072\";\n                if (n.type === \"default\") return \"#1a192b\";\n\n                return \"#eee\";\n              }}\n              nodeColor={(n) => {\n                if (n.style?.background) return n.style.background;\n\n                return \"#fff\";\n              }}\n              nodeBorderRadius={2}\n            />\n            <Controls />\n            <Background color=\"#aaa\" gap={16} />\n          </ReactFlow>\n        </div>\n      </ReactFlowProvider>\n    </FlowWrapper>\n  );\n};\n\nexport default Flow;\n\nconst FlowWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  height: 100vh;\n  position: relative;\n  width: 100%;\n\n  .reactflow-wrapper {\n    height: 100%;\n    width: calc(100% - 200px);\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}