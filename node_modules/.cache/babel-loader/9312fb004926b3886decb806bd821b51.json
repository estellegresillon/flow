{"ast":null,"code":"var _jsxFileName = \"/Users/estellegresillon/code/flow/src/components/Flow/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport ReactFlow, { ReactFlowProvider, addEdge, removeElements, Controls } from \"react-flow-renderer\";\nimport styled from \"styled-components\";\nimport Sidebar from \"./Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet id = 0;\n\nconst getId = () => `dndnode_${id++}`;\n\nconst initialElements = [{\n  id: \"1\",\n  type: \"input\",\n  data: {\n    label: \"input node\"\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}];\n\nconst Flow = () => {\n  _s();\n\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [elements, setElements] = useState(initialElements);\n\n  const onConnect = params => setElements(els => addEdge(params, els));\n\n  const onElementsRemove = elementsToRemove => setElements(els => removeElements(elementsToRemove, els));\n\n  const onLoad = _reactFlowInstance => setReactFlowInstance(_reactFlowInstance);\n\n  const onDragOver = event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n  };\n\n  const onDrop = event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData(\"application/reactflow\");\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: getId(),\n      type,\n      position,\n      data: {\n        label: `${type} node`\n      }\n    };\n    setElements(es => es.concat(newNode));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FlowWrapper, {\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactflow-wrapper\",\n        ref: reactFlowWrapper,\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          elements: elements,\n          onConnect: onConnect,\n          onElementsRemove: onElementsRemove,\n          onLoad: onLoad,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          children: /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Flow, \"t0Pmcgj3+nKbdYNPuwo8wbQmUCM=\");\n\n_c = Flow;\nexport default Flow;\nconst FlowWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  height: calc(100vh - 60px);\n  position: relative;\n  width: 100%;\n`;\n_c2 = FlowWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Flow\");\n$RefreshReg$(_c2, \"FlowWrapper\");","map":{"version":3,"sources":["/Users/estellegresillon/code/flow/src/components/Flow/index.jsx"],"names":["React","useState","useRef","ReactFlow","ReactFlowProvider","addEdge","removeElements","Controls","styled","Sidebar","id","getId","initialElements","type","data","label","position","x","y","Flow","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","elements","setElements","onConnect","params","els","onElementsRemove","elementsToRemove","onLoad","_reactFlowInstance","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","project","clientX","left","clientY","top","newNode","es","concat","FlowWrapper","div"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  removeElements,\n  Controls,\n} from \"react-flow-renderer\";\nimport styled from \"styled-components\";\n\nimport Sidebar from \"./Sidebar\";\n\nlet id = 0;\nconst getId = () => `dndnode_${id++}`;\n\nconst initialElements = [\n  {\n    id: \"1\",\n    type: \"input\",\n    data: { label: \"input node\" },\n    position: { x: 250, y: 5 },\n  },\n];\n\nconst Flow = () => {\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [elements, setElements] = useState(initialElements);\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\n  const onElementsRemove = (elementsToRemove) =>\n    setElements((els) => removeElements(elementsToRemove, els));\n\n  const onLoad = (_reactFlowInstance) =>\n    setReactFlowInstance(_reactFlowInstance);\n\n  const onDragOver = (event) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n  };\n\n  const onDrop = (event) => {\n    event.preventDefault();\n\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData(\"application/reactflow\");\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top,\n    });\n    const newNode = {\n      id: getId(),\n      type,\n      position,\n      data: { label: `${type} node` },\n    };\n\n    setElements((es) => es.concat(newNode));\n  };\n\n  return (\n    <FlowWrapper>\n      <ReactFlowProvider>\n        <Sidebar />\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\n          <ReactFlow\n            elements={elements}\n            onConnect={onConnect}\n            onElementsRemove={onElementsRemove}\n            onLoad={onLoad}\n            onDrop={onDrop}\n            onDragOver={onDragOver}\n          >\n            <Controls />\n          </ReactFlow>\n        </div>\n      </ReactFlowProvider>\n    </FlowWrapper>\n  );\n};\n\nexport default Flow;\n\nconst FlowWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  height: calc(100vh - 60px);\n  position: relative;\n  width: 100%;\n`;\n"]},"metadata":{},"sourceType":"module"}