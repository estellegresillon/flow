{"ast":null,"code":"var _jsxFileName = \"/Users/estellegresillon/code/flow/src/components/Flow/Sidebar.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  const onDragStart = (event, nodeType) => {\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\n    event.dataTransfer.effectAllowed = \"move\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    style: {\n      width: \"200px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nodes\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: \"You can drag these nodes to the pane on the right.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dndnode input\",\n        onDragStart: event => onDragStart(event, \"input\"),\n        draggable: true,\n        children: \"Input Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dndnode\",\n        onDragStart: event => onDragStart(event, \"default\"),\n        draggable: true,\n        children: \"Default Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dndnode output\",\n        onDragStart: event => onDragStart(event, \"output\"),\n        draggable: true,\n        children: \"Output Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action save\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action import\",\n        children: \"Import\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action clean\",\n        children: \"Clean\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/estellegresillon/code/flow/src/components/Flow/Sidebar.jsx"],"names":["Sidebar","onDragStart","event","nodeType","dataTransfer","setData","effectAllowed","width"],"mappings":";;;AAAA,MAAMA,OAAO,GAAG,MAAM;AACpB,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACvCD,IAAAA,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2B,uBAA3B,EAAoDF,QAApD;AACAD,IAAAA,KAAK,CAACE,YAAN,CAAmBE,aAAnB,GAAmC,MAAnC;AACD,GAHD;;AAKA,sBACE;AAAO,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,WAAW,EAAGL,KAAD,IAAWD,WAAW,CAACC,KAAD,EAAQ,OAAR,CAFrC;AAGE,QAAA,SAAS,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE;AACE,QAAA,SAAS,EAAC,SADZ;AAEE,QAAA,WAAW,EAAGA,KAAD,IAAWD,WAAW,CAACC,KAAD,EAAQ,SAAR,CAFrC;AAGE,QAAA,SAAS,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAkBE;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,WAAW,EAAGA,KAAD,IAAWD,WAAW,CAACC,KAAD,EAAQ,QAAR,CAFrC;AAGE,QAAA,SAAS,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA2BE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAzCD;;KAAMF,O;AA2CN,eAAeA,OAAf","sourcesContent":["const Sidebar = () => {\n  const onDragStart = (event, nodeType) => {\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\n    event.dataTransfer.effectAllowed = \"move\";\n  };\n\n  return (\n    <aside style={{ width: \"200px\" }}>\n      <div className=\"nodes\">\n        <div className=\"description\">\n          You can drag these nodes to the pane on the right.\n        </div>\n        <div\n          className=\"dndnode input\"\n          onDragStart={(event) => onDragStart(event, \"input\")}\n          draggable\n        >\n          Input Node\n        </div>\n        <div\n          className=\"dndnode\"\n          onDragStart={(event) => onDragStart(event, \"default\")}\n          draggable\n        >\n          Default Node\n        </div>\n        <div\n          className=\"dndnode output\"\n          onDragStart={(event) => onDragStart(event, \"output\")}\n          draggable\n        >\n          Output Node\n        </div>\n      </div>\n      <div className=\"actions\">\n        <div className=\"action save\">Save</div>\n        <div className=\"action import\">Import</div>\n        <div className=\"action clean\">Clean</div>\n      </div>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}