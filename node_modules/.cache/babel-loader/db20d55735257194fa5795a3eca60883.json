{"ast":null,"code":"var _jsxFileName = \"/Users/estellegresillon/code/flow/src/components/SmallModal/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport IconClose from \"components/common/IconClose\";\nimport Input from \"../Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SmallModal = _ref => {\n  _s();\n\n  let {\n    name,\n    onValidate,\n    onClose\n  } = _ref;\n  const [value, setValue] = useState(\"\");\n  const onClick = useCallback(() => {\n    if (!value) {\n      return;\n    }\n\n    onValidate(name, value);\n    setValue(\"\");\n    onClose();\n  }, [name, onClose, onValidate, value]);\n  const handleKeyDown = useCallback(e => {\n    const key = e.key;\n\n    if (key === \"Enter\") {\n      onClick();\n    }\n  }, [onClick]);\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [handleKeyDown]);\n  return /*#__PURE__*/_jsxDEV(SmallModalWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(IconClose, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: name,\n      onChange: event => setValue(event.target.value),\n      placeholder: `Enter a name for your ${name}`,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateButton, {\n      onClick: onClick,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SmallModal, \"Jphz9eE8Zn/vc3yC//Pny1kGACI=\");\n\n_c = SmallModal;\nexport default SmallModal;\nconst SmallModalWrapper = styled.div`\n  align-items: flex-start;\n  background-color: white;\n  border-radius: 15px;\n  box-shadow: 0 1px 60px 0 rgb(69 129 192 / 15%);\n  display: flex;\n  flex-direction: column;\n  left: 140px;\n  position: absolute;\n  top: 0px;\n  width: 250px;\n  z-index: 1;\n\n  svg {\n    color: #365ed2;\n    height: 10px;\n    width: 10px;\n    margin: 5px;\n\n    &:hover {\n      color: #092578;\n    }\n  }\n`;\n_c2 = SmallModalWrapper;\nconst CloseButton = styled.div`\n  border-radius: 10px;\n  margin: 10px;\n  text-align: center;\n`;\n_c3 = CloseButton;\nconst CreateButton = styled.div`\n  border-radius: 10px;\n  color: white;\n  font-family: Noah Bold;\n  margin: 10px;\n  padding: 10px 0;\n  text-align: center;\n  width: calc(100% - 20px);\n  background-color: #365ed3;\n\n  &:hover {\n    background-color: #092578;\n  }\n`;\n_c4 = CreateButton;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SmallModal\");\n$RefreshReg$(_c2, \"SmallModalWrapper\");\n$RefreshReg$(_c3, \"CloseButton\");\n$RefreshReg$(_c4, \"CreateButton\");","map":{"version":3,"sources":["/Users/estellegresillon/code/flow/src/components/SmallModal/index.jsx"],"names":["useCallback","useEffect","useState","styled","IconClose","Input","SmallModal","name","onValidate","onClose","value","setValue","onClick","handleKeyDown","e","key","window","addEventListener","removeEventListener","event","target","SmallModalWrapper","div","CloseButton","CreateButton"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMC,UAAU,GAAG,QAAmC;AAAA;;AAAA,MAAlC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA;AAApB,GAAkC;AACpD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMU,OAAO,GAAGZ,WAAW,CAAC,MAAM;AAChC,QAAI,CAACU,KAAL,EAAY;AACV;AACD;;AAEDF,IAAAA,UAAU,CAACD,IAAD,EAAOG,KAAP,CAAV;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,OAAO;AACR,GAR0B,EAQxB,CAACF,IAAD,EAAOE,OAAP,EAAgBD,UAAhB,EAA4BE,KAA5B,CARwB,CAA3B;AAUA,QAAMG,aAAa,GAAGb,WAAW,CAC9Bc,CAAD,IAAO;AACL,UAAMC,GAAG,GAAGD,CAAC,CAACC,GAAd;;AAEA,QAAIA,GAAG,KAAK,OAAZ,EAAqB;AACnBH,MAAAA,OAAO;AACR;AACF,GAP8B,EAQ/B,CAACA,OAAD,CAR+B,CAAjC;AAWAX,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCJ,aAAnC;AACA,WAAO,MAAMG,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCL,aAAtC,CAAb;AACD,GAHQ,EAGN,CAACA,aAAD,CAHM,CAAT;AAKA,sBACE,QAAC,iBAAD;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEJ,OAAtB;AAAA,6BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEF,IADR;AAEE,MAAA,QAAQ,EAAGY,KAAD,IAAWR,QAAQ,CAACQ,KAAK,CAACC,MAAN,CAAaV,KAAd,CAF/B;AAGE,MAAA,WAAW,EAAG,yBAAwBH,IAAK,EAH7C;AAIE,MAAA,KAAK,EAAEG;AAJT;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEE,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3CD;;GAAMN,U;;KAAAA,U;AA6CN,eAAeA,UAAf;AAEA,MAAMe,iBAAiB,GAAGlB,MAAM,CAACmB,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA;MAAMD,iB;AAyBN,MAAME,WAAW,GAAGpB,MAAM,CAACmB,GAAI;AAC/B;AACA;AACA;AACA,CAJA;MAAMC,W;AAMN,MAAMC,YAAY,GAAGrB,MAAM,CAACmB,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAME,Y","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport IconClose from \"components/common/IconClose\";\n\nimport Input from \"../Input\";\n\nconst SmallModal = ({ name, onValidate, onClose }) => {\n  const [value, setValue] = useState(\"\");\n\n  const onClick = useCallback(() => {\n    if (!value) {\n      return;\n    }\n\n    onValidate(name, value);\n    setValue(\"\");\n    onClose();\n  }, [name, onClose, onValidate, value]);\n\n  const handleKeyDown = useCallback(\n    (e) => {\n      const key = e.key;\n\n      if (key === \"Enter\") {\n        onClick();\n      }\n    },\n    [onClick]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [handleKeyDown]);\n\n  return (\n    <SmallModalWrapper>\n      <CloseButton onClick={onClose}>\n        <IconClose />\n      </CloseButton>\n      <Input\n        name={name}\n        onChange={(event) => setValue(event.target.value)}\n        placeholder={`Enter a name for your ${name}`}\n        value={value}\n      />\n      <CreateButton onClick={onClick}>Create</CreateButton>\n    </SmallModalWrapper>\n  );\n};\n\nexport default SmallModal;\n\nconst SmallModalWrapper = styled.div`\n  align-items: flex-start;\n  background-color: white;\n  border-radius: 15px;\n  box-shadow: 0 1px 60px 0 rgb(69 129 192 / 15%);\n  display: flex;\n  flex-direction: column;\n  left: 140px;\n  position: absolute;\n  top: 0px;\n  width: 250px;\n  z-index: 1;\n\n  svg {\n    color: #365ed2;\n    height: 10px;\n    width: 10px;\n    margin: 5px;\n\n    &:hover {\n      color: #092578;\n    }\n  }\n`;\n\nconst CloseButton = styled.div`\n  border-radius: 10px;\n  margin: 10px;\n  text-align: center;\n`;\n\nconst CreateButton = styled.div`\n  border-radius: 10px;\n  color: white;\n  font-family: Noah Bold;\n  margin: 10px;\n  padding: 10px 0;\n  text-align: center;\n  width: calc(100% - 20px);\n  background-color: #365ed3;\n\n  &:hover {\n    background-color: #092578;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}