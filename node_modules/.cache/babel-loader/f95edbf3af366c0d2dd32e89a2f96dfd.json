{"ast":null,"code":"var _jsxFileName = \"/Users/estellegresillon/code/flow/src/components/Flow/Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport IconPlus from \"components/common/IconPlus\";\nimport Input from \"components/common/Input\";\nimport Select from \"components/common/Select\";\nimport SmallModal from \"components/SmallModal\";\nimport { saveDocumentInLocalStorage, saveNewFlowInLocalStorage } from \"utils/localStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_SELECT_OPTIONS = [\"default\"];\n\nconst Sidebar = _ref => {\n  _s();\n\n  let {\n    elements,\n    newNodeName,\n    onClean,\n    onInputChange,\n    onRemoveFlow,\n    onSelectChange,\n    options,\n    selectedFlow,\n    setOptions,\n    setSelectedFlow\n  } = _ref;\n  const [isCreateFlowOpen, setIsCreateFlowOpen] = useState(false);\n\n  const onDragStart = (event, nodeType) => {\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\n    event.dataTransfer.effectAllowed = \"move\";\n  };\n\n  const handleSaveDocument = () => {\n    saveDocumentInLocalStorage(selectedFlow, elements);\n  };\n\n  const onCreateFlow = flowName => {\n    const newOptions = [...options].push(flowName);\n    setOptions(newOptions);\n    console.log(newOptions, \"new\");\n    saveNewFlowInLocalStorage(flowName);\n    setSelectedFlow(flowName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SideBarWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flow-selector\",\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        name: \"flow-selector\",\n        onChange: onSelectChange,\n        options: options.length > 0 ? options : INITIAL_SELECT_OPTIONS,\n        placeholder: \"Select a saved flow\",\n        value: selectedFlow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action save\",\n          onClick: handleSaveDocument,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action remove\",\n          onClick: () => onRemoveFlow(selectedFlow),\n          children: \"Remove flow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nodes\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: \"You can drag these nodes to the workspace and connect them by clicking on the circular handles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"node-name\",\n        onChange: onInputChange,\n        placeholder: \"New node name\",\n        value: newNodeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dndnode input\",\n        onDragStart: event => onDragStart(event, \"input\"),\n        draggable: true,\n        children: \"Input Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dndnode\",\n        onDragStart: event => onDragStart(event, \"default\"),\n        draggable: true,\n        children: \"Default Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dndnode output\",\n        onDragStart: event => onDragStart(event, \"output\"),\n        draggable: true,\n        children: \"Output Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action new\",\n        onClick: () => setIsCreateFlowOpen(true),\n        children: [/*#__PURE__*/_jsxDEV(IconPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), \" New\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), isCreateFlowOpen && /*#__PURE__*/_jsxDEV(SmallModal, {\n        hasButton: true,\n        name: \"flow\",\n        onValidate: onCreateFlow,\n        onClose: () => setIsCreateFlowOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action clean\",\n        onClick: onClean,\n        children: \"Clean workspace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"import-export-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"action import\",\n          children: \"Import\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), \" /\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"action export\",\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), \" file\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"yoMQiU1K7RKm5Ao+QawZCrnlOgM=\");\n\n_c = Sidebar;\nexport default Sidebar;\nconst SideBarWrapper = styled.div`\n  box-shadow: 0 1px 30px 0 rgb(69 129 192 / 20%);\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  height: calc(100% - 60px);\n  padding: 30px;\n  width: 170px;\n\n  .nodes {\n    input {\n      margin-bottom: 10px;\n    }\n  }\n\n  .description {\n    font-size: 12px;\n    margin-bottom: 20px;\n  }\n\n  .actions {\n    font-size: 14px;\n    font-weight: bolder;\n\n    .new {\n      display: flex;\n\n      svg {\n        width: 16px;\n        height: 16px;\n        margin-right: 5px;\n      }\n    }\n\n    .action {\n      cursor: pointer;\n      margin-bottom: 20px;\n      white-space: nowrap;\n\n      &:hover {\n        color: #0041d0;\n      }\n    }\n  }\n\n  .flow-selector {\n    select {\n      margin-bottom: 20px;\n    }\n  }\n\n  .dndnode {\n    background: white;\n    border-color: black;\n    border-radius: 3px;\n    border-style: solid;\n    border-width: 1px;\n    color: #222;\n    cursor: grab;\n    font-size: 12px;\n    margin-bottom: 10px;\n    padding: 10px;\n    text-align: center;\n    width: 150px;\n\n    &:hover {\n      box-shadow: 0 1px 4px 1px rgb(0 0 0 / 8%);\n    }\n\n    &.input {\n      border-color: #0041d0;\n    }\n\n    &.output {\n      border-color: #ff0072;\n    }\n  }\n`;\n_c2 = SideBarWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sidebar\");\n$RefreshReg$(_c2, \"SideBarWrapper\");","map":{"version":3,"sources":["/Users/estellegresillon/code/flow/src/components/Flow/Sidebar.jsx"],"names":["useState","styled","IconPlus","Input","Select","SmallModal","saveDocumentInLocalStorage","saveNewFlowInLocalStorage","INITIAL_SELECT_OPTIONS","Sidebar","elements","newNodeName","onClean","onInputChange","onRemoveFlow","onSelectChange","options","selectedFlow","setOptions","setSelectedFlow","isCreateFlowOpen","setIsCreateFlowOpen","onDragStart","event","nodeType","dataTransfer","setData","effectAllowed","handleSaveDocument","onCreateFlow","flowName","newOptions","push","console","log","length","SideBarWrapper","div"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport IconPlus from \"components/common/IconPlus\";\nimport Input from \"components/common/Input\";\nimport Select from \"components/common/Select\";\nimport SmallModal from \"components/SmallModal\";\nimport {\n  saveDocumentInLocalStorage,\n  saveNewFlowInLocalStorage,\n} from \"utils/localStorage\";\n\nconst INITIAL_SELECT_OPTIONS = [\"default\"];\n\nconst Sidebar = ({\n  elements,\n  newNodeName,\n  onClean,\n  onInputChange,\n  onRemoveFlow,\n  onSelectChange,\n  options,\n  selectedFlow,\n  setOptions,\n  setSelectedFlow,\n}) => {\n  const [isCreateFlowOpen, setIsCreateFlowOpen] = useState(false);\n  const onDragStart = (event, nodeType) => {\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\n    event.dataTransfer.effectAllowed = \"move\";\n  };\n\n  const handleSaveDocument = () => {\n    saveDocumentInLocalStorage(selectedFlow, elements);\n  };\n\n  const onCreateFlow = (flowName) => {\n    const newOptions = [...options].push(flowName);\n    setOptions(newOptions);\n    console.log(newOptions, \"new\");\n    saveNewFlowInLocalStorage(flowName);\n    setSelectedFlow(flowName);\n  };\n\n  return (\n    <SideBarWrapper>\n      <div className=\"flow-selector\">\n        <Select\n          name=\"flow-selector\"\n          onChange={onSelectChange}\n          options={options.length > 0 ? options : INITIAL_SELECT_OPTIONS}\n          placeholder=\"Select a saved flow\"\n          value={selectedFlow}\n        />\n        <div className=\"actions\">\n          <div className=\"action save\" onClick={handleSaveDocument}>\n            Save\n          </div>\n          <div\n            className=\"action remove\"\n            onClick={() => onRemoveFlow(selectedFlow)}\n          >\n            Remove flow\n          </div>\n        </div>\n      </div>\n      <div className=\"nodes\">\n        <div className=\"description\">\n          You can drag these nodes to the workspace and connect them by clicking\n          on the circular handles.\n        </div>\n        <Input\n          name=\"node-name\"\n          onChange={onInputChange}\n          placeholder=\"New node name\"\n          value={newNodeName}\n        />\n        <div\n          className=\"dndnode input\"\n          onDragStart={(event) => onDragStart(event, \"input\")}\n          draggable\n        >\n          Input Node\n        </div>\n        <div\n          className=\"dndnode\"\n          onDragStart={(event) => onDragStart(event, \"default\")}\n          draggable\n        >\n          Default Node\n        </div>\n        <div\n          className=\"dndnode output\"\n          onDragStart={(event) => onDragStart(event, \"output\")}\n          draggable\n        >\n          Output Node\n        </div>\n      </div>\n      <div className=\"actions\">\n        <div className=\"action new\" onClick={() => setIsCreateFlowOpen(true)}>\n          <IconPlus /> New\n        </div>\n        {isCreateFlowOpen && (\n          <SmallModal\n            hasButton\n            name=\"flow\"\n            onValidate={onCreateFlow}\n            onClose={() => setIsCreateFlowOpen(false)}\n          />\n        )}\n        <div className=\"action clean\" onClick={onClean}>\n          Clean workspace\n        </div>\n        <div className=\"import-export-wrapper\">\n          <span className=\"action import\">Import</span> /{\" \"}\n          <span className=\"action export\">Export</span> file\n        </div>\n      </div>\n    </SideBarWrapper>\n  );\n};\n\nexport default Sidebar;\n\nconst SideBarWrapper = styled.div`\n  box-shadow: 0 1px 30px 0 rgb(69 129 192 / 20%);\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  height: calc(100% - 60px);\n  padding: 30px;\n  width: 170px;\n\n  .nodes {\n    input {\n      margin-bottom: 10px;\n    }\n  }\n\n  .description {\n    font-size: 12px;\n    margin-bottom: 20px;\n  }\n\n  .actions {\n    font-size: 14px;\n    font-weight: bolder;\n\n    .new {\n      display: flex;\n\n      svg {\n        width: 16px;\n        height: 16px;\n        margin-right: 5px;\n      }\n    }\n\n    .action {\n      cursor: pointer;\n      margin-bottom: 20px;\n      white-space: nowrap;\n\n      &:hover {\n        color: #0041d0;\n      }\n    }\n  }\n\n  .flow-selector {\n    select {\n      margin-bottom: 20px;\n    }\n  }\n\n  .dndnode {\n    background: white;\n    border-color: black;\n    border-radius: 3px;\n    border-style: solid;\n    border-width: 1px;\n    color: #222;\n    cursor: grab;\n    font-size: 12px;\n    margin-bottom: 10px;\n    padding: 10px;\n    text-align: center;\n    width: 150px;\n\n    &:hover {\n      box-shadow: 0 1px 4px 1px rgb(0 0 0 / 8%);\n    }\n\n    &.input {\n      border-color: #0041d0;\n    }\n\n    &.output {\n      border-color: #ff0072;\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}