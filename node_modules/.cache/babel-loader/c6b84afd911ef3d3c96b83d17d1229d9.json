{"ast":null,"code":"var _jsxFileName = \"/Users/estellegresillon/code/flow/src/components/Flow/Sidebar.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  const onDragStart = (event, nodeType) => {\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\n    event.dataTransfer.effectAllowed = \"move\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: \"You can drag these nodes to the pane on the right.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dndnode input\",\n      onDragStart: event => onDragStart(event, \"input\"),\n      draggable: true,\n      children: \"Input Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dndnode\",\n      onDragStart: event => onDragStart(event, \"default\"),\n      draggable: true,\n      children: \"Default Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dndnode output\",\n      onDragStart: event => onDragStart(event, \"output\"),\n      draggable: true,\n      children: \"Output Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/estellegresillon/code/flow/src/components/Flow/Sidebar.jsx"],"names":["Sidebar","onDragStart","event","nodeType","dataTransfer","setData","effectAllowed"],"mappings":";;;AAAA,MAAMA,OAAO,GAAG,MAAM;AACpB,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACvCD,IAAAA,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2B,uBAA3B,EAAoDF,QAApD;AACAD,IAAAA,KAAK,CAACE,YAAN,CAAmBE,aAAnB,GAAmC,MAAnC;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,WAAW,EAAGJ,KAAD,IAAWD,WAAW,CAACC,KAAD,EAAQ,OAAR,CAFrC;AAGE,MAAA,SAAS,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,WAAW,EAAGA,KAAD,IAAWD,WAAW,CAACC,KAAD,EAAQ,SAAR,CAFrC;AAGE,MAAA,SAAS,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAkBE;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,WAAW,EAAGA,KAAD,IAAWD,WAAW,CAACC,KAAD,EAAQ,QAAR,CAFrC;AAGE,MAAA,SAAS,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAlCD;;KAAMF,O;AAoCN,eAAeA,OAAf","sourcesContent":["const Sidebar = () => {\n  const onDragStart = (event, nodeType) => {\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\n    event.dataTransfer.effectAllowed = \"move\";\n  };\n\n  return (\n    <aside>\n      <div className=\"description\">\n        You can drag these nodes to the pane on the right.\n      </div>\n      <div\n        className=\"dndnode input\"\n        onDragStart={(event) => onDragStart(event, \"input\")}\n        draggable\n      >\n        Input Node\n      </div>\n      <div\n        className=\"dndnode\"\n        onDragStart={(event) => onDragStart(event, \"default\")}\n        draggable\n      >\n        Default Node\n      </div>\n      <div\n        className=\"dndnode output\"\n        onDragStart={(event) => onDragStart(event, \"output\")}\n        draggable\n      >\n        Output Node\n      </div>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}